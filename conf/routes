# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

######################################################## Home page ##################################################################

GET    /                                                                   controllers.Application.index()
GET    /duplicate                                                          controllers.Application.index1()
GET    /get-pieChart1                                                      controllers.staticController.getTodayStatus()
GET    /get-pieChart2                                                      controllers.staticController.getRecruitmentStatus()
GET    /get-pieChart3                                                      controllers.staticController.getleadsSummary()
GET    /get-pieChart4                                                      controllers.staticController.getRating()
GET    /get-pieChart5                                                      controllers.staticController.getTimeSheetHours()
GET    /get-pieChart6                                                      controllers.staticController.getAttendanceHours()
GET    /get-pieChart7                                                      controllers.staticController.getApplicantStatus()
POST   /login-using-google                                                 controllers.Application.signInUsingGoogle()

GET    /logout                                                             controllers.Application.logout()
POST   /login                                                              controllers.Application.login()
POST   /registar                                                           controllers.Application.registration()
POST   /firstChangePassword                                                controllers.Application.changePassword()
GET    /forgetPasswordPage                                                 controllers.Application.forgetPasswordPage()
POST   /sendMailForgetPassword                                             controllers.Application.sendMailForgetPassword()
POST   /forgetPassword                                                     controllers.Application.forgetPassword()
GET    /error                                                              controllers.Application.error()
GET    /loginError                                                         controllers.Application.loginError()
GET    /parse-csv                                                          controllers.SampleDataController.parseCSV()
GET    /bb8/:id/:key                                                       controllers.Application.bb8(id : String,key : String)
POST   /isExistEmailForgetPassword                                         controllers.Application.isExistEmailForgetPassword()
POST   /isExistUserName                                                    controllers.Application.isExistUserName()
POST   /isExistUserMno                                                     controllers.Application.isExistUserMno()
POST   /isExistUserEmailId                                                 controllers.Application.isExistUserEmailId()
POST   /isExistProjectName                                                 controllers.Application.isExistProjectName()
POST   /isExistUserEsslId                                                  controllers.Application.isExistEsslId()
POST   /isExistIncidentType                                                controllers.Application.isExistIncidentType()
GET    /dashboard                                                          controllers.Application.getDynamicDashboard(role : String , id : Long)
POST   /isExistCandidateEmail                                              controllers.Application.isExistCandidateEmail()
POST   /isPDFfile                                                          controllers.Application.isPDFfile()
POST   /isExistPolicyName                                                  controllers.Application.isExistPolicyName()
POST   /isExistleaveType                                                   controllers.Application.isExistleaveType()
POST   /isExistholidayDate                                                 controllers.Application.isExistholidayDate()
POST   /isExistcompensatoryDay                                             controllers.Application.isExistcompensatoryDay()


GET    /dummy                                                              controllers.AdminLeaveController.cal()
#GET      /peDummy                           	   							controllers.PEController.peDummy()
GET    /dummy1                                                             controllers.AdminLeaveController.cal1()
#GET	 	/sendMail															controllers.SampleDataController.sendMails()
######################################################## Admin Methods ##################################################################

GET    /adminHome                                                          controllers.AdminController.home()
GET    /img/:id                                                            controllers.AdminController.getimage(id : Long)
GET    /imgProfile/:id                                                     controllers.AdminController.getimageProfile(id : Long)
POST   /addProject                                                         controllers.AdminController.addProject()
GET    /editUser/:id                                                       controllers.AdminController.editUser(id:Long)
POST   /updateUser                                                         controllers.AdminController.updateUser()
POST   /updateProfile                                                      controllers.AdminController.updateProfile()
GET    /deleteAppUser/:id                                                  controllers.AdminController.deleteAppUser(id:Long)
GET    /editProjects/:id                                                   controllers.AdminController.editProjects(id:Long)
GET    /deleteContact/:pid/:cid                                            controllers.AdminController.deleteContact(pid:Long,cid:Long)
POST   /updateProject                                                      controllers.AdminController.updateProject()
GET    /getdailyReport/:id                                                 controllers.AdminController.getdailyReport(id:Long)
GET    /deleteDailyReport/:did                                             controllers.AdminController.deleteDailyReport(did:Long)
GET    /getWeekDR/:sd/:ed/:id                                              controllers.AdminController.getWeekDR(sd : String, ed : String,id : Long)
GET    /getWeekTimeSheet/:sd/:ed/:id                                       controllers.AdminController.getWeekTimeSheet(sd : String, ed : String,id : Long)
GET    /getWeekPTimeSheet/:sd/:ed/:id                                      controllers.AdminController.getWeekPTimeSheet(sd : String, ed : String,id : Long)
GET    /dailyStatusDateWise/:date                                          controllers.AdminController.dailyStatusDateWise(date:String)
GET    /timeSheetsDateWise/:date                                           controllers.AdminController.timeSheetsDateWise(date:String)
GET    /downloadExcelSheet                                                 controllers.AdminController.downloadExcelSheet()
GET    /manageTeamMemberByAdmin/:project                                   controllers.AdminController.manageTeamMemberByAdmin(project:String)
POST   /manageTeamMemberActionByAdmin                                      controllers.AdminController.manageTeamMemberActionByAdmin()
GET    /admin/fill-status                                                  controllers.AdminController.fillStatus()
#For one date and ids Report Disply(Not Weekly Reports)

GET    /dscdatewisereport/:reportType/:id                                  controllers.AdminController.DSCDateWiseReport(reportType:String,id:Long)
GET    /getEmpDailyStatusByDate/:startDate/:id                             controllers.ReportController.getEmpDailyStatusByDate(startDate:String,id:Long)
GET    /getYearlyReport/:year/:id/:reportType                              controllers.ReportController.getYearlyReport(year:String,id:Long,reportType:String)

#All Weekly Reports

GET    /EmployeeReport/:typeOfReport                                       controllers.AdminController.employeeReport(typeOfReport:String)
GET    /getEmpWeeklyAttendance/:startDate/:endDate/:id/:reportType         controllers.ReportController.getEmpWeeklyAttendance(startDate:String,endDate:String,id:Long,reportType:String)
GET    /getprojectDetails/:startDate/:endDate/:reportType                  controllers.ReportController.getprojectDetails(startDate:String,endDate:String,reportType:String)

#Repoprts URL Redirection
#GET     /redirect/:url											 		controllers.AdminController.redirectReportUrl(url:String)
GET    /redirect/:url                                                      controllers.AdminController.redirectMultiParamsReportUrl(url:String)

######################################################## Incident - Policies in Admin Controller ##################################################################
GET    /report-critical-incident                                           controllers.AdminController.reportCriticalIncident()
GET    /user-policy                                                        controllers.AdminController.userPolicy()
GET    /all-policy                                                         controllers.AdminController.allPolicy()
POST   /addIncident                                                        controllers.AdminController.addIncident()
GET    /getViewImage/:id                                                   controllers.AdminController.getViewImage(id : Long)
GET    /downloadIncidentImage/:id                                          controllers.AdminController.downloadIncidentImage(id : Long)
POST   /addPolicy                                                          controllers.AdminController.addPolicy()
GET    /getPolicyDocument/:id                                              controllers.AdminController.getPolicyDocument(id : Long)
GET    /editPocily/:id                                                     controllers.AdminController.editPocily(id : Long)
POST   /updatePolicy                                                       controllers.AdminController.updatePolicy()
GET    /deletePocily/:id                                                   controllers.AdminController.deletePocily(id : Long)


POST   /addCIRType                                                         controllers.AdminController.addCIRType()
######################################################## Admin & Marketing Lead Controller ##################################################################

POST   /isExistCompanyName                                                 controllers.AdminLeadController.isExistCompanyName()
POST   /isExistWebsiteName                                                 controllers.AdminLeadController.isExistWebsiteName()
POST   /isExistContactName                                                 controllers.AdminLeadController.isExistContactName()
POST   /isExistLeadStatus                                                  controllers.AdminLeadController.isExistLeadStatus()
GET    /lead/allNotification                                               controllers.staticController.allNotification()
GET    /lead/markAllRead                                                   controllers.staticController.markAllRead()
GET    /lead/markAllReadNoti                                               controllers.staticController.markAllReadNoti()
GET    /lead/downloadAllCompanysExcellSheet                                controllers.AdminLeadController.downloadAllCompanysExcellSheet()
GET    /lead/leads-summary                                                 controllers.AdminLeadController.leadsSummary()
POST   /lead/uploadContactExcellSheet                                      controllers.AdminLeadController.uploadContactExcellSheet()

GET    /lead/getDuplicateJobTitle/:cpid/:ctid                              controllers.AdminLeadController.getDuplicateJobTitle(cpid : Long, ctid : Long)
GET    /lead/getSameJobTitle                                               controllers.AdminLeadController.getSameJobTitle()
POST   /lead/addCompany                                                    controllers.AdminLeadController.addCompany()
POST   /lead/updateCompany                                                 controllers.AdminLeadController.updateCompany()
GET    /lead/deleteCompanyContact/:cpid/:ctid                              controllers.AdminLeadController.deleteCompanyContact(cpid : Long, ctid : Long)
POST   /lead/addCompanyContact                                             controllers.AdminLeadController.addCompanyContact()
GET    /lead/deleteCompanyContactNos/:cnid/:ctNoid                         controllers.AdminLeadController.deleteCompanyContactNos(cnid : Long, ctNoid : Long)
POST   /lead/updateCompanyContact                                          controllers.AdminLeadController.updateCompanyContact()
POST   /lead/addLeadStatus                                                 controllers.AdminLeadController.addLeadStatus()
POST   /lead/updateLeadStatus                                              controllers.AdminLeadController.updateLeadStatus()
POST   /lead/add-lead                                                      controllers.AdminLeadController.addLead()
GET    /lead/deletdLead/:leadid                                            controllers.AdminLeadController.deletdLead(leadid : Long)
GET    /lead/deleteLeadContact/:lid/:ctid                                  controllers.AdminLeadController.deleteLeadContact(lid : Long, ctid : Long)
POST   /lead/updateLead                                                    controllers.AdminLeadController.updateLead()
GET    /lead/file/:id                                                      controllers.AdminLeadController.getFile(id : Long)
GET    /lead/deleteComment/:id/:lid                                        controllers.AdminLeadController.deleteComment(id : Long,lid : String)
POST   /lead/storeLeadComment                                              controllers.AdminLeadController.storeLeadComment()
GET    /lead/updateLeadComment/:id/:data                                   controllers.AdminLeadController.updateLeadComment(id : Long , data : String)

######################################################## Admin Leave Controller ##################################################################

GET    /leave-types                                                        controllers.AdminLeaveController.getLeaveTypes()
POST   /secure-save/leave-type                                             controllers.AdminLeaveController.saveLeaveTypes()
GET    /secure-edit/leave-type/:id                                         controllers.AdminLeaveController.editLeaveType(id : Long)
GET    /working-days                                                       controllers.AdminLeaveController.getWorkingDays()
POST   /secure-save/working-days                                           controllers.AdminLeaveController.saveWorkingDays()
GET    /secure-create/holiday                                              controllers.AdminLeaveController.getAddHolidays()
POST   /secure-save/holiday                                                controllers.AdminLeaveController.saveHoliday()
GET    /secure-delete/holiday/:id                                          controllers.AdminLeaveController.deleteHoliday(id : Long)
GET    /secure-edit/holiday/:id                                            controllers.AdminLeaveController.editHoliday(id : Long)
GET    /entitlement                                                        controllers.AdminLeaveController.getEntitlement()
POST   /secure-save/entitlement                                            controllers.AdminLeaveController.saveEntitlement()
GET    /leaves-panel                                                       controllers.AdminLeaveController.getConfigureLeaves()
GET    /apply-leave                                                        controllers.AdminLeaveController.getApplyLeave()
GET    /leave-details/:id                                                  controllers.AdminLeaveController.getLeaveDetails(id : Long)
POST   /secure-apply-leave                                                 controllers.AdminLeaveController.applyLeave()
GET    /leave-tracker                                                      controllers.AdminLeaveController.getAdminLeaveTracker()
POST   /get-leave-tracker                                                  controllers.AdminLeaveController.getAdminLeaveTrackerBYType()
GET    /leave-tracker-byType/:type                                         controllers.AdminLeaveController.getAdminLeaveTrackerType(type : String)
GET    /secure-get-employe-details/:id                                     controllers.AdminLeaveController.displayAppliedLeaveDetails(id : Long)
POST   /secure-approve-leave-by-admin                                      controllers.AdminLeaveController.approvalByAdmin()
GET    /holidays/current-year                                              controllers.AdminLeaveController.getHolidaysList()
GET    /leave/status                                                       controllers.AdminLeaveController.getLeaveStatus()
POST   /cancel-leave/:cancelId                                             controllers.AdminLeaveController.cancelLeave(cancelId : Long)
GET    /team/leave-tracker                                                 controllers.AdminLeaveController.getTeamLeaveTracker()
GET    /leave-calendar/:month/:year                                        controllers.AdminLeaveController.getLeaveCalender(month : Integer , year :Integer )
GET    /view-users-leaves                                                  controllers.AdminLeaveController.getAppUserEntitlementPage()
GET    /user-entitlement/:id                                               controllers.AdminLeaveController.eachUserEntitlement(id : Long)
GET    /update-notification/:id                                            controllers.AdminLeaveController.notificationRedirection(id : Long)
GET    /leave-calendar/next/:month/:year                                   controllers.AdminLeaveController.getNextCalendar(month : Integer , year :Integer )
GET    /leave-calendar/previous/:month/:year                               controllers.AdminLeaveController.getPreviousCalendar(month : Integer , year :Integer )
GET    /leave-calendar                                                     controllers.AdminLeaveController.getDefaultCalendar()
POST   /approved-leave-cancel                                              controllers.AdminLeaveController.cancelLeaveApproved()
GET    /apply-WFH                                                          controllers.AdminLeaveController.getApplyWFH()
POST   /secure-apply-wfh                                                   controllers.AdminLeaveController.applyWFH()
GET    /toBeApplyLeaveSendMAil/:id                                         controllers.AdminLeaveController.toBeApplyLeaveSendMAil(id : Long)

#NEW Changes
GET    /new-apply-leave                                                    controllers.AdminLeaveController.getNewApplyLeave()
POST   /new-secure-apply-leave                                             controllers.AdminLeaveController.newApplyLeave()
GET    /leave-approve-by-hr/:id                                            controllers.AdminLeaveController.leaveApprovedByHR(id : Long)
#GET		/leaves-carryForward											controllers.AdminLeaveController.leavesCarryForward()
GET    /resetLeaves                                                        controllers.AdminLeaveController.resetLeaves()
GET    /leavesPreview/:date                                                controllers.AdminLeaveController.leavesPreviewBYDate(date : String)
GET    /leavesStatusByType/:type                                                controllers.AdminLeaveController.leavesStatusByType(type : String)
######################################################## Static Pages ##################################################################

GET    /home-page                                                          controllers.Application.homePage()
GET    /add-user                                                           controllers.Application.addUser()
GET    /all-user                                                           controllers.Application.allUser()
GET    /add-project                                                        controllers.Application.addProject()
GET    /all-project                                                        controllers.Application.allProject()
GET    /user-profile                                                       controllers.Application.userProfile()

GET    /daily-status                                                       controllers.Application.dailyStatus()
GET    /daily-status-date                                                  controllers.Application.dailyStatusDate()
GET    /time-sheets                                                        controllers.Application.timeSheets()
GET    /time-sheets-date                                                   controllers.Application.timeSheetDate()
GET    /change-password                                                    controllers.Application.changePassword1()
GET    /admin/manage-team-members                                          controllers.Application.AdminmanageTeamMembers()
GET    /add-attendence                                                     controllers.AdminController.attendenceRender()
GET    /attendence/:date                                                   controllers.AdminController.attendence(date:String)
POST   /attendenceSubmit                                                   controllers.AdminController.attendenceSubmit()
GET    /attendenceSubmitMsg/:date                                          controllers.AdminController.attendenceSubmitmsg(date : String)
GET    /user-wise-attendance                                               controllers.AdminController.userwiseAttendanceRender()
GET    /userwiseAttendanceWeekRender/:id                                   controllers.AdminController.userwiseAttendanceWeekRender(id:Long)
GET    /weekllyAttendanceUserwise/:startDate/:endDate/:id                  controllers.AdminController.weekllyAttendanceUserwise(startDate:String ,endDate:String,id:Long)
POST   /uploadAttendance                                                   controllers.AdminController.uploadAttendance()
GET    /date-wise-attendance                                               controllers.AdminController.attendanceDatewiseRender()
GET    /editattendance/:id                                                 controllers.AdminController.editAttendance(id:Long)
POST   /editAttendanceAction                                               controllers.AdminController.editAttendanceAction()
GET    /weekllyAttendance/:sdate/:edate                                    controllers.AdminController.weekllyAttendance(sdate:String,edate:String)
POST   /uploadAttendanceXls                                                controllers.AdminController.uploadAttendanceXls()

#Static Manager Pages
GET    /managerHome                                                        controllers.ManagerController.home()
GET    /manager/projects                                                   controllers.ManagerController.projects()
GET    /manager/manage-team-members                                        controllers.ManagerController.manageTeamMembers()
GET    /manager/fill-status                                                controllers.ManagerController.fillStatus()
GET    /manager/status-history                                             controllers.ManagerController.statusHistory()
GET    /manager/team-status-report                                         controllers.ManagerController.teamStatusReport()
GET    /manager/fill-timesheet                                             controllers.ManagerController.fillTimesheet()
GET    /manager/timesheet-history                                          controllers.ManagerController.timesheetHistory()
GET    /manager/team-timesheet-history                                     controllers.ManagerController.teamTimesheetReport()
GET    /manager/team-timesheets-date                                       controllers.ManagerController.teamTimesheetReportDate()
GET    /manager/timeSheetsDateWise/:date                                   controllers.ManagerController.teamTimeSheetsDateWise(date : String)
GET    /manageteammember/:val                                              controllers.ManagerController.manageTeamMember(val:String)
GET    /get/:name                                                          controllers.ManagerController.appUserProjects(name:Long)
POST   /manageteammemberaction                                             controllers.ManagerController.manageTeamMemberAction()
GET    /manager/dailyStatusWeekwise/:date1/:date2                          controllers.ManagerController.dailyStatusWeekwise(date1:String, date2:String)
GET    /dailyStatusDateWiseManager/:date                                   controllers.ManagerController.dailyStatusDateWise(date:String)
GET    /dailyStatusDateWiseRender                                          controllers.ManagerController.dailyStatusDateWiseRender()
GET    /exlsheetDailystatusDateWise/:date                                  controllers.ManagerController.exlsheetDailystatusDateWise(date:String)
GET    /dailyReportWeekwiseUser/:sd/:ed/:id                                controllers.ManagerController.dailyStatusWeekwiseUser(sd : String, ed : String,id : Long)
GET    /attendance-history                                                 controllers.ManagerController.attendanceHistory()
GET    /attendanceHistoryManager/:sdate/:edate                             controllers.ManagerController.attendanceHistoryManagerWeekwise(sdate:String,edate:String)
GET    /user-wise-manager-attendance                                       controllers.ManagerController.userwiseManagerAttendance()
GET    /attendanceUserwiseWeek/:sdate/:edate/:id                           controllers.ManagerController.attendanceUserwiseWeek(sdate:String,edate:String,id:Long)
GET    /date-wise-manager-attendance                                       controllers.ManagerController.attendanceDatewiseManager()
GET    /attendanceDatewiseManager/:date/:date1                             controllers.ManagerController.attendanceDatewiseManager1(date:String,date1:String)

#Static Engineer Pages
GET    /engineerHome                                                       controllers.EngineerController.home()
GET    /HRHome                                                             controllers.EngineerController.HRHome()
GET    /MarketingHome                                                      controllers.EngineerController.MarketingHome()
POST   /dailystatus1                                                       controllers.EngineerController.dailyStatus1()
GET    /engineer/projects                                                  controllers.EngineerController.projects()
GET    /engineer/fill-status                                               controllers.EngineerController.fillStatus()
GET    /engineer/status-history                                            controllers.EngineerController.dailyStatusHistory()
GET    /engineer/fill-timesheet                                            controllers.EngineerController.fillTimeSheet()
GET    /engineer/timesheet-history                                         controllers.EngineerController.timesheetHistory()
GET    /getWeekEnTimeSheet/:sd/:ed                                         controllers.EngineerController.getWeekUTimeSheet(sd : String, ed : String)
GET    /getWeekEnPTimeSheet/:sd/:ed/:id                                    controllers.EngineerController.getWeekPTimeSheet(sd : String, ed : String,id : Long)
GET    /dailyStatusWeekwise/:sd/:ed                                        controllers.EngineerController.dailyStatusWeekwise(sd : String, ed : String)
POST   /timeSheet                                                          controllers.EngineerController.timeSheet()
GET    /daily-status-success                                               controllers.EngineerController.dailyStatusSuccessMsg()
GET    /week-wise-attendance                                               controllers.EngineerController.weekwiseAttendanceRender()
GET    /weekwiseAttendanceData/:startDate/:endDate                         controllers.EngineerController.weekwiseAttendanceData(startDate : String, endDate : String)


#  static controller
GET    /configureLeaves                                                    controllers.staticController.getconfigureLeaves()
GET    /addNewLeaveApply                                                   controllers.staticController.getAddNewLeaveApply()
GET    /workingDay                                                         controllers.staticController.getWorkingDay()
GET    /addHoliday                                                         controllers.staticController.getAddHoliday()
GET    /addEntitlement                                                     controllers.staticController.getAddEntitlement()
GET    /leaveCalender                                                      controllers.staticController.getLeaveCalender()
GET    /leaveTracker                                                       controllers.staticController.getLeaveTracker()
GET    /applyLeave                                                         controllers.staticController.getApplyLeave()
GET    /leaveStatus                                                        controllers.staticController.getLeaveStatus()

# reports
GET    /reportsLandingPage                                                 controllers.staticController.getAllReports()

# static controller Lead Module
GET    /add-lead                                                           controllers.staticController.getAddLead()
GET    /edit-lead/:id                                                      controllers.staticController.getEditLead(id : Long)
GET    /configure-lead                                                     controllers.staticController.getConfigureLead()
GET    /edit-configure-lead/:id                                            controllers.staticController.editConfigureLead(id : Long)
GET    /addLeadStatusBYLead/:id                                            controllers.staticController.addLeadStatusBYLead(id : String)
GET    /trackLead                                                          controllers.staticController.getTrackLead()
GET    /all-leads                                                          controllers.staticController.getAllLeads()
GET    /lead-management/:id                                                controllers.staticController.getManagementLead(id : Long)
GET    /lead-management-append/:id                                         controllers.staticController.getAppendManagementLead(id : Long)

######################################################## Task module ##################################################################

GET    /taskRender1                                                        controllers.TaskController.taskRender1()
GET    /taskRenderMarkUnMark                                               controllers.TaskController.taskRenderMarkUnMark()
GET    /assignMe                                                           controllers.TaskController.assignMe()
GET    /allTasks                                                           controllers.TaskController.getAllTasks()
GET    /fetchAllTask                                                       controllers.TaskController.fetchAllTask()
GET    /fetchAssignToMeTask                                                controllers.TaskController.fetchAssignToMeTask()
GET    /taskInbox                                                          controllers.TaskController.taskInbox()
GET    /fetchTaskList/:id                                                  controllers.TaskController.fetchTaskList(id:Long)
GET    /addTask                                                            controllers.TaskController.getAddTask()
POST   /addTaskAction                                                      controllers.TaskController.addTask()
GET    /editTask/:id                                                       controllers.TaskController.editTask(id : Long)
POST   /editTaskAction                                                     controllers.TaskController.editTaskAction()
POST   /taskComment                                                        controllers.TaskController.taskComment()
GET    /editTaskStatus/:status/:taskId                                     controllers.TaskController.editTaskStatus(status : String,taskId : Long)
GET    /deleteTaskList/:id                                                 controllers.TaskController.deleteTaskList(id : Long)
GET    /deleteTask/:id                                                     controllers.TaskController.deleteTask(id : Long)
GET    /markTask/:id                                                       controllers.TaskController.markTask(id : Long)
GET    /showNotificationTask/:id                                           controllers.TaskController.showNotificationTask(id : Long)
POST   /searchTask                                                         controllers.TaskController.searchTask()
GET    /fetchStarTask                                                      controllers.TaskController.fetchStarTask()
GET    /myTasks                                                            controllers.TaskController.myTasks()
GET    /taskCongigure/:id                                                  controllers.TaskController.taskConfigure(id : Long)
POST   /task/storetaskComment                                              controllers.TaskController.storetaskComment()
GET    /taskTracker                                                        controllers.TaskController.taskTracker()
POST   /task/addTaskStatus                                                 controllers.TaskController.addTaskStatus()
GET    /editConfigureTaskStaus/:id                                         controllers.TaskController.editConfigureTaskStaus(id : Long)
POST   /updateTaskStatus                                                   controllers.TaskController.updateTaskStatus()
POST   /isExistTaskStatus                                                  controllers.TaskController.isExistTaskStatus()
POST   /isExistTaskTitle                                                   controllers.TaskController.isExistTaskTitle()
POST   /createTaskList                                                     controllers.TaskController.createTaskList()
GET    /showNotificationTaskEdit/:id                                       controllers.TaskController.showNotificationTaskEdit(id : Long)
GET    /all-companies                                                      controllers.staticController.getAllCompany()
GET    /edit-company/:id                                                   controllers.staticController.getEditCompany(id : Long)
GET    /add-company                                                        controllers.staticController.getAddCompany()
GET    /addCompanyBYLead                                                   controllers.staticController.addCompanyBYLead()
GET    /all-contacts                                                       controllers.staticController.getAllContact()
GET    /add-contact                                                        controllers.staticController.getAddContact()
GET    /addContactBYCompany/:id                                            controllers.staticController.addContactBYCompany(id : String)
GET    /addContactBYLead                                                   controllers.staticController.addContactBYLead()
GET    /test                                                               controllers.staticController.test()
GET    /edit-contact/:id                                                   controllers.staticController.getEditContact(id : Long)
GET    /taskRender                                                         controllers.TaskController.taskRender()
POST   /addTaskList                                                        controllers.TaskController.addTaskList()
POST   /editTaskList                                                       controllers.TaskController.editTaskList()

######################################################## Git-WebHook-Notification ##################################################################

POST   /secure-chat/get-webhook-response/:groupId                          controllers.ChatController.getWebHookJson(groupId:Long)
GET    /secure-chat/git-integration-confirm/:groupId                       controllers.ChatController.getGitIntegrationDetails(groupId:Long)
GET    /secure-chat/git-configure-url/:groupId                             controllers.ChatController.gitConfigureUrl(groupId:Long)
#GET     /secure-chat/get-git-notification-type/:msgId                   controllers.ChatController.getGitNotificationType(msgId:Long)
#GET     /secure-chat/get-git-issue-type/:notificationId                 controllers.ChatController.getGitIssueType(notificationId:Long)
#GET     /secure-chat/get-created-issue-details/:notificationId          controllers.ChatController.getGitIssueDetails(notificationId:Long)
GET    /secure-chat/get-git-issue-image/:uploadFileId                      controllers.ChatController.getGitIssueImage(uploadFileId:Long)
#GET     /secure-chat/get-git-commit-comment-details/:notifId            controllers.ChatController.getGitCommitCommentDetails(notifId:Long)



######################################################## recruitment Controller ##################################################################

GET    /recruitment/openings                                               controllers.RecruitmentController.openings()
GET    /recruitment/applicants                                             controllers.RecruitmentController.applicants()
GET    /recruitment/recruitmentlandingpage                                 controllers.RecruitmentController.configure()
GET    /recruitment/category                                               controllers.RecruitmentController.category()
GET    /recruitment/roles                                                  controllers.RecruitmentController.roles()
GET    /recruitment/skills                                                 controllers.RecruitmentController.skills()
POST   /recruitment/addCategory                                            controllers.RecruitmentController.addCategory()
POST   /recruitment/addRole                                                controllers.RecruitmentController.addRole()
POST   /recruitment/addSkills                                              controllers.RecruitmentController.addSkill()
POST   /recruitment/addJob                                                 controllers.RecruitmentController.addJob()
POST   /isExistJobCategory                                                 controllers.RecruitmentController.isExistCategory()
POST   /isExistMailType                                                    controllers.RecruitmentController.isExistMailType()
POST   /isExistRole                                                        controllers.RecruitmentController.isExistRole()
POST   /isExistSkillName                                                   controllers.RecruitmentController.isExistSkill()
POST   /isExistSource                                                      controllers.RecruitmentController.isExistSource()
POST   /recruitment/checkResumeFormat                                      controllers.RecruitmentController.checkResumeFormat()
GET    /categoryEdit/:id                                                   controllers.RecruitmentController.editCategory(id : Long)
POST   /recruitment/editCategory                                           controllers.RecruitmentController.editCategoryAction()
GET    /editSkill/:id                                                      controllers.RecruitmentController.editSkill(id : Long)
POST   /recruitment/editSkill                                              controllers.RecruitmentController.editSkillAction()
GET    /editRole/:id                                                       controllers.RecruitmentController.editRole(id : Long)
POST   /recruitment/editJobRole                                            controllers.RecruitmentController.editRoleAction()
GET    /recruitment/source                                                 controllers.RecruitmentController.source()
POST   /recruitment/addSource                                              controllers.RecruitmentController.addSource()
GET    /editSource/:id                                                     controllers.RecruitmentController.editSource(id : Long)
POST   /recruitment/editSource                                             controllers.RecruitmentController.editSourceAction()
GET    /recruitment/addNewApplicant                                        controllers.RecruitmentController.addNewApplicant()
GET    /editOpenning/:id                                                   controllers.RecruitmentController.editOpenning(id : Long)
POST   /recruitment/editOpenningAction                                     controllers.RecruitmentController.editOpenningAction()
POST   /recruitment/addApplicant                                           controllers.RecruitmentController.addApplicant()
GET    /updateApplicant/:id                                                controllers.RecruitmentController.updateApplicant(id : Long)
POST   /recruitment/editApplicant                                          controllers.RecruitmentController.editApplicant()
GET    /categoryDelete/:id                                                 controllers.RecruitmentController.deleteJobCategory(id : Long)
GET    /deleteRole/:id                                                     controllers.RecruitmentController.deleteRole(id : Long)
GET    /deleteSkill/:id                                                    controllers.RecruitmentController.deleteSkill(id : Long)
GET    /deleteSource/:id                                                   controllers.RecruitmentController.deleteSource(id :Long)
GET    /downloadJobDescription/:id                                         controllers.RecruitmentController.downloadJobDescription(id : Long)
GET    /getJobDescription/:id                                              controllers.RecruitmentController.getJobDescription(id : Long)
GET    /downloadApplicantResume/:id                                        controllers.RecruitmentController.downloadApplicantResume(id : Long)
GET    /getResume/:id                                                      controllers.RecruitmentController.getResume(id : Long)
POST   /isExistApplicantEmailId                                            controllers.RecruitmentController.isExistApplicantEmailId()
POST   /isExistContactNo                                                   controllers.RecruitmentController.isExistContactNo()
GET    /recruitment/applicants/addRounds/:id                               controllers.RecruitmentController.addRounds(id : Long)
POST   /recruitment/addRound                                               controllers.RecruitmentController.addRoundAction()
GET    /recruitment/interviewType                                          controllers.RecruitmentController.interviewType()
POST   /recruitment/addInterviewType                                       controllers.RecruitmentController.addInterviewType()
GET    /interviewTypeEdit/:id                                              controllers.RecruitmentController.editInterviewType(id : Long)
POST   /recruitment/editInterviewAction                                    controllers.RecruitmentController.editInterviewTypeAction()
GET    /recruitment/deleteInterviewType/:id                                controllers.RecruitmentController.deleteJobInterviewType(id : Long)
POST   /isExistInterviewType                                               controllers.RecruitmentController.isExistInterviewType()
GET    /recruitment/questionTemplate                                       controllers.RecruitmentController.questionTemplate()
POST   /recruitment/addQuestionTemplate                                    controllers.RecruitmentController.addQuestionTemplate()
GET    /questionTemplateEdit/:id                                           controllers.RecruitmentController.questionTemplateEdit(id : Long)
POST   /recruitment/editQuetionTemplateAction                              controllers.RecruitmentController.editQuetionTemplateAction()
GET    /recruitment/deleteQuestionTemplate/:id                             controllers.RecruitmentController.deleteQuestionTemplate(id : Long)
GET    /recruitment/getQuestionTemplate/:id                                controllers.RecruitmentController.getQuestionTemplate(id : Long)
GET    /selectionRoundDelete/:id                                           controllers.RecruitmentController.selectionRoundDelete(id : Long)
POST   /selectionRoundEdit                                                 controllers.RecruitmentController.selectionRoundEdit()
GET    /editRecruitmentSelectionRound/:id                                  controllers.RecruitmentController.editRecruitmentSelectionRound(id : Long)
POST   /recruitment/addInterviewer                                         controllers.RecruitmentController.addInterviewer()
GET    /recruitment/interviewerFeedback                                    controllers.RecruitmentController.interviewerFeedbackRender()
GET    /recruitment/addInterviewFeedBack/:id                               controllers.RecruitmentController.getInterviewRounds(id : Long)
POST   /recruitment/addInterviewerFeedBack                                 controllers.RecruitmentController.addInterviewerFeedBack()
POST   /recruitment/sendMailApplicant/:id                                  controllers.RecruitmentController.SendMailApplicant(id : Long)
POST   /recruitment/sendMailCalendarApplicant/:id                          controllers.RecruitmentController.SendMailCalendarApplicant(id : Long)
POST   /recruitment/sendNotificationEventCancelled/:id                     controllers.RecruitmentController.sendNotificationEventCancelled(id : Long)
GET    /recruitment/mailContent                                            controllers.RecruitmentController.mailContent()
POST   /recruitment/addMailContent                                         controllers.RecruitmentController.addMailContent()
GET    /recruitment/editMailContent/:id                                    controllers.RecruitmentController.editMailContent(id : Long)
POST   /recruitment/updateMailContent                                      controllers.RecruitmentController.updateMailContent()
GET    /recruitment/previewMailContent/:id                                 controllers.RecruitmentController.previewMailContent(id : Long)
GET    /recruitment/previewIntroMailContent/:id                            controllers.RecruitmentController.previewIntroMailContent(id : Long)
GET    /recruitment/jobOpening                                             controllers.RecruitmentController.jobOpening()
GET    /recruitment/jobReference/:jobId                                    controllers.RecruitmentController.jobReference(jobId : Long)
POST   /recruitment/addReference                                           controllers.RecruitmentController.addReference()
GET    /recruitment/jobReferenceEmpHistory                                 controllers.RecruitmentController.jobReferenceEmpHistory()
GET    /recruitment/jobReferralHistory                                     controllers.RecruitmentController.jobReferralHistory()
GET    /recruitment/jobByReferralHistory/:id                               controllers.RecruitmentController.jobByReferralHistory(id : Long)
GET    /downloadReferralResume/:referralId                                 controllers.RecruitmentController.downloadReferralResume(referralId : Long)
GET    /recruitment/deleteReference/:jobId                                 controllers.RecruitmentController.deleteReference(jobId : Long)
GET    /recruitment/MailingList                                            controllers.RecruitmentController.MailingList()
POST   /recruitment/MailingListSubmission                                  controllers.RecruitmentController.MailingListSubmission()

######################################################## Chat Controller ##################################################################

GET    /chat/connect/:channelName                                          controllers.ChatController.getChat(channelName:String)
GET    /chat/chatnew                                                       controllers.ChatController.getChatNew()
GET    /secure-chat/chatRoom/:loginAppuserId                               controllers.ChatController.chatRoom(loginAppuserId:Long)
GET    /secure-chat/getchatPage/:id                                        controllers.ChatController.chatRoomJs(id:Long)
GET    /secure-chat/islogin                                                controllers.ChatController.isLogin()
GET    /secure-chat/messages/:id/:firstRow                                 controllers.ChatController.messagesPage(id:Long,firstRow:Integer)
POST   /secure-chat/update-lastseentab/:lastSeenTabId/:role                controllers.ChatController.updateLastSeenTabId(lastSeenTabId:String,role : String)
GET    /secure-chat/get-lastseentab                                        controllers.ChatController.getLastSeenTabId()
GET    /secure-chat/get-lastseentab-atfirsttime                            controllers.ChatController.getLastSeenTabIdAtFirstTime()
POST   /secure-chat/change-message-view-status/:messageId                  controllers.ChatController.changeMessageViewStatus(messageId:String)
GET    /secure-chat/get-message-notification-count/:toUserId               controllers.ChatController.getMessageNotificationCount(toUserId:Long)
POST   /secure-chat/change-message-notification/:toAppsuerId               controllers.ChatController.changeMessageNotification(toAppsuerId:String)
GET    /secure-chat/onlineAppusers                                         controllers.ChatController.findOnlineAppuserList()
GET    /secure-chat/create-group                                           controllers.ChatController.createGroup()
POST   /secure-chat/save-chat-group                                        controllers.ChatController.saveChatGroup()
GET    /secure-chat/isvalidgroupmeber/:groupId                             controllers.ChatController.isValidGroupMember(groupId:String)
GET    /secure-chat/isvalidgroupmeber1/:groupId                            controllers.ChatController.isValidGroupMember1(groupId:String)
GET    /secure-chat/group-messages/:groupId/:firstRow                      controllers.ChatController.getGroupMessages(groupId:Long,firstRow:Integer)
POST   /secure-chat/change-group-message-notification/:groupId             controllers.ChatController.changeGroupNotificationStatus(groupId:Long)
POST   /secure-chat/change-message-notification-status/:groupId            controllers.ChatController.changeActiveAppUserGroupNotification(groupId:Long)
GET    /secure-chat/get-group-message-notification-count/:groupId          controllers.ChatController.getGroupMessageNotificationCount(groupId:Long)
GET    /secure-chat/get-global-message-notification-count/:toUserId        controllers.ChatController.getGlobalNotifications(toUserId:String)
GET    /secure-chat/get-group-global-message-notification-count/:groupId   controllers.ChatController.getGroupGlobalNotifications(groupId:String)
GET    /secure-chat/get-appuser-image/:appuserId                           controllers.ChatController.getAppsuerProfileImage(appuserId:Long)
POST   /secure-chat/isExistGroup                                           controllers.ChatController.isExistGroup()
GET    /secure-chat/leave-channel/:groupId                                 controllers.ChatController.leaveChannel(groupId:Long)
GET    /secure-chat/is-general-group/:groupId                              controllers.ChatController.isGeneralGroup(groupId:Long)
GET    /secure-chat/invite-others-to-channel/:groupId                      controllers.ChatController.getInviteOthersToChannel(groupId:Long)
#POST 	/secure-chat/add-invited-users                            		controllers.ChatController.addInvitedUsersToGroup()
#GET  	/secure-chat/get-invited-users-json                       		controllers.ChatController.getInvitedUsersJson()
#GET  	/secure-chat/get-leaved-channel                           		controllers.ChatController.getLeavedChannel()
GET    /secure-chat/get-upload-image/:messageId                            controllers.ChatController.getUploadImage(messageId:Long)
GET    /secure-chat/download-upload-image/:messageId                       controllers.ChatController.downloadUploadImage(messageId: Long)
GET    /secure-chat/get-group-users/:groupId                               controllers.ChatController.getGroupMembers(groupId:Long)
#GET  	/secure-chat/get-newly-added-users                        		controllers.ChatController.getNewlyAddedUsersToGroup()
POST   /secure-chat/edit-message/:randomId                                 controllers.ChatController.editMessage(randomId:String)
GET    /secure-chat/delete-message/:messageId                              controllers.ChatController.deleteMessage(messageId:Long)
POST   /secure-chat/save-upload-image                                      controllers.ChatController.saveUploadImage()
GET    /secure-chat/getMessage-details/:deleteRandomId                     controllers.ChatController.getMessageDetails(deleteRandomId:String)
GET    /secure-chat/getallappuserlist                                      controllers.ChatController.getAllAppuserList()
GET    /secure-chat/get-appuser-profile/:userName                          controllers.ChatController.getAppuserProfile(userName:String)
GET    /secure-chat/get-appuser-json-Details/:appUserId                    controllers.ChatController.getAppuserJsonDetails(appUserId:Long)
GET    /secure-chat/ismessage-saved/:randomId                              controllers.ChatController.isMessageSaved(randomId:String)
POST   /secure-chat/get-all-channels-jsondata                              controllers.ChatController.getAllChannelsJsonData()
POST   /secure-chat/get-new-channel-jsondata/:channelId                    controllers.ChatController.getNewChannelJsonData(channelId:String)
GET    /secure-chat/get-html-from-url/:url                                 controllers.ChatController.getHtmlfromUrl(url:String)
GET    /secure-chat/remove-channel/:groupId                                controllers.ChatController.deleteChatGroup(groupId:Long)
POST   /secure-chat/save-url-preview                                       controllers.ChatController.saveUrlPreview()
POST   /secure-chat/save-code-snippet                                      controllers.ChatController.saveCodeSnippet()
POST   /secure-chat/load-more-lines/:randomId                              controllers.ChatController.getSnippetAllLines(randomId:String)
POST   /secure-chat/rename-channel                                         controllers.ChatController.renameChatGroup()
#GET 	/secure-chat/get-user-groups/:appUserId                         controllers.ChatController.getAppUserChatGroups(appUserId:Long)
POST   /secure-chat/get-file-commentsList/:fileId                          controllers.ChatController.getFileCommentsList(fileId:String)
GET    /secure-chat/get-file-details/:fileId                               controllers.ChatController.getFileDetails(fileId:String)
POST   /secure-chat/get-file-to-details/:fileId                            controllers.ChatController.getFileTODetails(fileId:String)
GET    /storeComments                                                      controllers.Application.storeComments()
GET    /chat/connect                                                       controllers.ChatController.getChatTab()
GET    /chat/connect/                                                      controllers.ChatController.getChatTab()
POST   /secure-chat/connect/update-file-like                               controllers.ChatController.updateFileLike()
POST   /secure-chat/connect/get-all-image-likes                            controllers.ChatController.getAllIamgeLikes()
POST   /secure-chat/connect/save-chat-appuser-settings                     controllers.ChatController.saveChatAppuserSettings()
POST   /secure-chat/get-last-channel-jsondata                              controllers.ChatController.getLastSeenChannelMessages()


GET    /addbb8botuser                                                      controllers.SampleDataController.addBb8BotUser()
GET    /updateuploadfile                                                   controllers.SampleDataController.updateUploadFileInfo()
GET    /updatethrymrimages                                                 controllers.SampleDataController.remvoeThrymrIamges()


######################################################## Performance Evaluation ##################################################################

GET    /performance/selfAppraisal                                          controllers.PEController.SelfAppraisal()
GET    /performance/employeeAppraisal                                      controllers.PEController.employeeAppraisal()
GET    /performance/configureQuestionnaire                                 controllers.PEController.configureQuestionnaire()
GET    /performance/selfAppraisalQuestion                                  controllers.PEController.SelfAppraisalQuestion()
GET    /performance/employeeAppraisalQuestion                              controllers.PEController.EmployeeAppraisalQuestion()
GET    /performance/editSelfAppraisalQuestion/:id                          controllers.PEController.EditSelfAppraisalQuestion(id : Long)
GET    /performance/editEmployeeAppraisalQuestion/:id                      controllers.PEController.EditEmployeeAppraisalQuestion(id : Long)
POST   /performance/addUpdateSelfAppraisalQuestion                         controllers.PEController.AddUpdateSelfAppraisalQuestion()
POST   /performance/addUpdateEmployeeAppraisalQuestion                     controllers.PEController.AddUpdateEmployeeAppraisalQuestion()
POST   /performance/addselfAppraisal                                       controllers.PEController.addselfAppraisal()
GET    /performance/selfAppraisalHistory                                   controllers.PEController.selfAppraisalHistory()
GET    /performance/monthSAppraisalHistory/:month                          controllers.PEController.monthSAppraisalHistory(month : String)
POST   /performance/editSelfAppraisal                                      controllers.PEController.editSelfAppraisal(id:java.lang.Long?=0L)
POST   /performance/updateSelfAppraisal                                    controllers.PEController.updateSelfAppraisal()
GET    /performance/employeeAppraisalForm/:id                              controllers.PEController.employeeAppraisalForm(id : Long)
POST   /performance/addEmployeeAppraisal                                   controllers.PEController.addEmployeeAppraisal()
GET    /performance/employeeAppraisalHistory                               controllers.PEController.employeeAppraisalHistory()
GET    /performance/monthEAppraisalHistory/:id/:month                      controllers.PEController.monthEAppraisalHistory(id : Long, month : String)
POST   /performance/editEmployeeAppraisal                                  controllers.PEController.editEmployeeAppraisal(id:java.lang.Long?=0L)
POST   /performance/updateEmployeeAppraisal                                controllers.PEController.updateEmployeeAppraisal()
GET    /performance/teamMemberSelfAppraisalHistory                         controllers.PEController.teamMemberSelfAppraisalHistory()
GET    /performance/monthteamSAppraisalHistory/:id/:month                  controllers.PEController.monthteamSAppraisalHistory(id : Long, month : String)
GET    /performance/PEDashBoard                                            controllers.PEController.PEDashBoard()
GET    /performance/monthEmployeesHistory/:month                           controllers.PEController.monthEmployeesHistory(month : String)
GET    /performance/PEMonthSeflHistory/:id                                 controllers.PEController.PEMonthSeflHistory(id : Long)
GET    /performance/PEMonthEmployeeHistory/:id                             controllers.PEController.PEMonthEmployeeHistory(id : Long)
GET    /performance/PEChart                                                controllers.PEController.PEChart()
GET    /performance/PELineChart/:id/:sMonth/:eMonth                        controllers.PEController.PELineChart(id : Long,sMonth : String,eMonth : String)
GET    /performance/monthTeamMemberList/:month                             controllers.PEController.monthTeamMemberList(month : String)

############################################### PMO Controller #############################################
#road-map
GET    /road-map/create/:projectId                                         controllers.pmo.RoadMapController.getRoadMapPage(projectId:Long)
POST   /road-map/save                                                      controllers.pmo.RoadMapController.saveRoadMap()
POST   /road-map/update                                                    controllers.pmo.RoadMapController.updateRoadMap()
POST   /road-map/delete/:roadMapId                                         controllers.pmo.RoadMapController.daleteRoadMap(roadMapId:Long)
GET    /road-map/list                                                      controllers.pmo.RoadMapController.roadMapList()
GET    /road-map/edit/:roadMapId                                           controllers.pmo.RoadMapController.showEditRoadMapPage(roadMapId:Long)
GET    /road-map/list-by-project/:projectId                                controllers.pmo.RoadMapController.roadmapListByProject(projectId: Long)
####epic
GET    /epic/create/:roadmapId                                             controllers.pmo.EpicController.getEpicPage(roadmapId:Long)
POST   /epic/save                                                          controllers.pmo.EpicController.saveEpics()
POST   /epic/update                                                        controllers.pmo.EpicController.updateEpic()
POST   /epic/delete/:epicId                                                controllers.pmo.EpicController.daleteEpic(epicId: Long)
GET    /epic/list                                                          controllers.pmo.EpicController.epicsList()
GET    /epic/edit/:epicId                                                  controllers.pmo.EpicController.showEditEpicPage(epicId:Long)
GET    /epic/list-by-road-map/:roadmapId                                   controllers.pmo.EpicController.epicListByRoadmap(roadmapId:Long)

### user stories
GET    /user-story/list                                                    controllers.pmo.UserStoryController.list()
GET    /user-story/list-by-epic/:epicId                                    controllers.pmo.UserStoryController.listByEpic(epicId:Long)
GET    /user-story/page/:epicId                                            controllers.pmo.UserStoryController.loadPage(epicId:Long)
POST   /user-story/create                                                  controllers.pmo.UserStoryController.create()
POST   /user-story/edit/:id                                                controllers.pmo.UserStoryController.edit(id:Long)
POST   /user-story/delete/:id                                              controllers.pmo.UserStoryController.delete(id:Long)
GET    /user-story/details/:id                                             controllers.pmo.UserStoryController.details(id:Long)

# task
GET    /task/create                                                        controllers.pmo.TaskController.createTask()
GET    /task/create-by-user-story/:userStId                                controllers.pmo.TaskController.createTaskByUserStory(userStId:Long)
POST   /task/save                                                          controllers.pmo.TaskController.saveTask()
GET    /task/edit/:taskId                                                  controllers.pmo.TaskController.editTask(taskId:Long)
GET    /task/list-by-suer-story/:userStId                                  controllers.pmo.TaskController.taskListbyUserStory(userStId:Long)
POST   /task/delete/:taskId                                                controllers.pmo.TaskController.deleteTask(taskId:Long)
GET    /task/list                                                          controllers.pmo.TaskController.taskList()
###test-cases
GET    /test-cases/create                                                  controllers.pmo.PMOController.getTestCasesPage()
POST   /test-cases/save                                                    controllers.pmo.PMOController.saveTestCases()
POST   /test-cases/update/:testcId                                         controllers.pmo.PMOController.updateTestCases(testcId: Long)
POST   /test-cases/delete/:testcId                                         controllers.pmo.PMOController.daleteTestCases(testcId: Long)
GET    /test-cases/list                                                    controllers.pmo.PMOController.showAllTestCases()
GET    /test-cases/edit/:testcId                                           controllers.pmo.PMOController.showEditTestCases(testcId:Long)



######### WIKI

GET    /wiki/pages                                                         controllers.wiki.PageController.list()
GET    /wiki/page/:id                                                      controllers.wiki.PageController.view(id:Long)
POST   /wiki/page/save                                                     controllers.wiki.PageController.save()
GET    /wiki/form/:id                                                      controllers.wiki.PageController.renderForm(id:Long)
GET    /wiki/papge/delete/:id                                              controllers.wiki.PageController.delete(id:Long)   

######################################################## Validation Controller ##################################################################


# Map static resources from the /public folder to the /assets URL path
GET    /assets/*file                                                       controllers.Assets.versioned(path="/public", file: Asset)
